-unless component.estimated_cost.nil?
  %tr
    %td.control
      -unless component.children.empty?
        =form_for( [@project, component], :html => { :id => "expand_#{component.id}" } ) do |f|
          =f.check_box :expand_in_estimate, :onchange => "$('form#expand_#{component.id}').submit();"
          =hidden_field_tag :redirect, estimate_report_for_project_path(@project)
    %td.control
      -unless component.fixed_cost_estimates.empty? && component.unit_cost_estimates.empty? && component.contracts.empty?
        =form_for( [@project, component], :html => { :id => "costs_#{component.id}" } ) do |f|
          =f.check_box :show_costs_in_estimate, :onchange => "$('form#costs_#{component.id}').submit();"
          =hidden_field_tag :redirect, estimate_report_for_project_path(@project)
        
    %td{:class => (indent == 0 ? nil : "indent_#{indent}" )}  
      %strong= component.name if indent == 0
      = component.name unless indent == 0
      
    -if session[:break_out_unit_costs]
      %td
      %td.currency
      
    -if session[:break_out_markup]
      %td.currency= number_to_currency component.estimated_raw_cost
      -@active_markups.each do |markup|
        %td.currency= number_to_currency markup.apply_recursively_to(component, :estimated_cost_markup_amount)
      
    %td.currency
      %strong= number_to_currency component.estimated_cost if indent == 0
      = number_to_currency component.estimated_cost unless indent == 0
      
  -if component.show_costs_in_estimate
    -component.unit_cost_estimates.each do |unit_cost|
      %tr
        %td.control
        %td.control
        %td{:class => "indent_#{indent+1}"}
          %i= unit_cost.name
        -if session[:break_out_unit_costs]
          %td
            ="#{unit_cost.quantity.value.to_i} #{unit_cost.quantity.unit} +#{number_to_percentage unit_cost.drop, :precision => 0} (#{unit_cost.quantity.name})" unless unit_cost.drop.nil?
            ="#{unit_cost.quantity.value.to_i} #{unit_cost.quantity.unit} (#{unit_cost.quantity.name})" if unit_cost.drop.nil?
          %td="#{number_to_currency unit_cost.unit_cost}/#{unit_cost.quantity.unit.singularize}"
        
        -if session[:break_out_markup]
          %td.currency
            %i= number_to_currency unit_cost.raw_cost
          -@active_markups.each do |markup|
            %td.currency= number_to_currency unit_cost.markups.include?(markup) ? markup.apply_to(unit_cost, :estimated_raw_cost) : 0
          
        %td.currency
          %i= number_to_currency unit_cost.cost
      
    -component.fixed_cost_estimates.each do |fixed_cost|
      %tr
        %td.control
        %td.control
        %td{:class => "indent_#{indent+1}"}
          %i= fixed_cost.name
        -if session[:break_out_unit_costs]
          %td
          %td.currency
        -if session[:break_out_markup]
          %td.currency
            %i= number_to_currency fixed_cost.raw_cost
          -@active_markups.each do |markup|
            %td.currency= number_to_currency fixed_cost.markups.include?(markup) ? markup.apply_to(fixed_cost, :estimated_raw_cost) : 0 
        %td.currency
          %i= number_to_currency fixed_cost.cost
          
    -component.contracts.each do |contract|
      =render :partial => 'estimate_report_contract', :locals => {:contract => contract, :indent => indent+1}
      
  -if component.expand_in_estimate
    -component.children.each do |subcomponent|
      =render :partial => 'estimate_report_component', :locals => {:component => subcomponent, :indent => indent + 1}
