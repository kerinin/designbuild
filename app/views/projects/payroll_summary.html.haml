.control
  =render :partial => 'shared/project_nav'
  
%h1
  =@project.name unless @project.nil?
  Payroll Summary

=form_tag( nil, {:method => :get, :id => 'date_select'} ) do
  Labor Summary for week of
  .inline=select_date @date, {}, {:onchange => "$('#date_select').submit();"}
  
-@projects ||= [@project]
%table
  %th Employee
  -@projects.each do |project|
    %th=project.name
    
  -@laborers.each do |laborer|
    -labor_cost_lines = LaborCostLine.by_laborer(laborer).where('date >= ?', weekday(5, @date)).where('date < ?', weekday(5, @date)-1)
    -unless labor_cost_lines.empty?
      %tr
        %td= laborer.name
        -@projects.each do |project|
          -lines = labor_cost_lines.by_project(project)
          %td
            =number_to_currency lines.inject(0) {|memo,obj| add_or_nil memo, multiply_or_nil( obj.hours, laborer.pay_rate ) }
            /
            =number_to_currency lines.inject(0) {|memo,obj| add_or_nil memo, multiply_or_nil( obj.hours, laborer.bill_rate ) }
        %td
          %strong= number_to_currency labor_cost_lines.inject(nil) {|memo, obj| add_or_nil memo, multiply_or_nil( obj.hours, laborer.pay_rate )}
    
  %tr  
    -@projects.each do |project|
      -labor_cost_lines = LaborCostLine.by_project(project).where('date >= ?', weekday(5, @date)).where('date < ?', weekday(5, @date)-1)
      %td= number_to_currency labor_cost_lines.inject(nil) {|memo, obj| add_or_nil memo, multiply_or_nil( obj.hours, obj.laborer.bill_rate ) }
      
  
