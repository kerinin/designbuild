-start_day = weekday(4, @date)-6
-end_day = weekday(4, @date)

.control
  =render :partial => 'shared/project_nav'
  
%h1
  =@project.name unless @project.nil?
  Payroll Summary

.control
  =form_tag( nil, {:method => :get, :id => 'date_select'} ) do
    change date:
    =select_date @date, {}, {:onchange => "$('#date_select').submit();"}

%h2
  Labor Summary for
  =start_day.strftime('%A %b %d')
  ='-'
  =end_day.strftime('%A %b %d')

-@projects ||= [@project]
-@laborers = Laborer.scoped

%table
  %th Employee
  -@projects.each do |project|
    %th=project.name
  %th Total Pay
    
  -@laborers.each do |laborer|
    -labor_cost_lines = LaborCostLine.where(:laborer_id => laborer.id).joins(:labor_set).where('labor_costs.date <= ?', end_day).where('labor_costs.date >= ?', start_day)
    -unless labor_cost_lines.empty?
      %tr
        %td= laborer.name
        -@projects.each do |project|
          -lines = labor_cost_lines.by_project(project)
          %td.currency
            -pay = lines.inject(nil) {|memo,obj| add_or_nil memo, multiply_or_nil( obj.hours, laborer.pay_rate ) }
            -bill = lines.inject(nil) {|memo,obj| add_or_nil memo, multiply_or_nil( obj.hours, laborer.bill_rate ) }
            -if pay || bill
              -if pay
                pay:
                =number_to_currency pay
              -else
                %h2 
                  ='!!! PAY RATE NOT SET - '
                  =link_to 'GO SET IT', edit_laborer_path(laborer)
                  ='!!!'
              %br
              bill:
              =number_to_currency bill
        %td.currency
          %strong= number_to_currency labor_cost_lines.inject(nil) {|memo, obj| add_or_nil memo, multiply_or_nil( obj.hours, laborer.pay_rate )}
    
  %tr  
    %th.right Total Bill
    -@projects.each do |project|
      -labor_cost_lines = LaborCostLine.by_project(project).joins(:labor_set).where('labor_costs.date <= ?', end_day).where('labor_costs.date >= ?', start_day)
      %td.currency
        %strong= number_to_currency labor_cost_lines.inject(nil) {|memo, obj| add_or_nil memo, multiply_or_nil( obj.hours, obj.laborer.bill_rate ) }
      
  
