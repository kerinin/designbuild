-@interval = params[:interval]
-@interval ||= 'week'

-start_day = case @interval
-when 'week'
  -@date-6  
-when 'month'
  - @date.to_time.advance(:months => -1, :days => 1).to_date 
-end_day = @date

.control
  =render :partial => 'shared/project_nav'

%h1
  =@project.name unless @project.nil?
  Labor Summary

.control
  =form_tag( nil, {:method => :get, :id => 'date_select'} ) do
    change end date:
    =select_date @date, {}, {:onchange => "$('#date_select').submit();"}

    change interval:
    =select_tag :interval, options_for_select([['1 week', 'week'], ['1 month', 'month']], @interval), {:onchange => "$('#date_select').submit();"}

%h2
  Labor Summary for
  =start_day.strftime('%A %b %d')
  ='-'
  =end_day.strftime('%A %b %d')

-laborers = Laborer.scoped
-tasks = @tasks.includes(:labor_costs => :line_items).where('labor_costs.date <= ?', end_day).where('labor_costs.date >= ?', start_day)
-tasks = tasks.includes(:project) unless @projects.nil?
-time_scope = LaborCostLine.includes(:labor_set).where('labor_costs.date <= ?', end_day).where('labor_costs.date >= ?', start_day)

%table
  %tr
    %th Task
    -tasks.each do |task|
      %th.number
        -unless @projects.nil?
          %i= task.project.name 
        = task.name
    %th Total Hours

  -laborers.each do |laborer|
  
    -scope = time_scope.where(:laborer_id => laborer.id)
    -total_hours = scope.sum(:hours)
    -grouped_hours = scope.group('labor_costs.task_id').sum(:hours)
    -unless grouped_hours.empty?
      %tr
        %td
          %strong= laborer.name
          
        -tasks.each do |task|
          %td.number
            -hours = grouped_hours[task.id]
            -if hours
              =hours
              h
        %td.number
          %strong
            =total_hours
            h
  %tr
    %td.right
      %strong Total Hours
    -tasks.each do |task|
      -grouped_costs = time_scope.group('labor_costs.task_id').sum(:cost)
      %td.number
        %strong
          = number_to_currency grouped_costs[task.id]

