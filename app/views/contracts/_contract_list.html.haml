%table.contracts
  %tr
    %th Contract Name
    %th Contractor
    %th.currency Bid
    %th.number Markup
    %th.currency Cost-to-Date
    %th.number % Total
    %th.control
    %th.control
    %th.control

  - contracts.each do |contract|
    %tr{:id => "contract_#{contract.id}"}
      %td= link_to contract.name, [@project, contract]
      %td= contract.active_bid.contractor unless contract.active_bid.blank?
      %td.currency= number_to_currency contract.raw_cost
      %td.number= number_to_percentage contract.total_markup, :precision => 0
      %td.currency= number_to_currency contract.raw_invoiced
      %td.number= number_to_percentage( multiply_or_nil(100, divide_or_nil(contract.raw_invoiced, contract.raw_cost)), :precision => 1)
      %td.control.show= link_to 'Show', [@project, contract]
      %td.control.edit= link_to 'Rename', edit_project_contract_path(@project, contract), :remote => true
      %td.control.destroy= link_to 'Destroy', [@project, contract], :confirm => 'Are you sure?', :method => :delete
      
  - if @contracts.empty?
    %tr
      %td{:colspan => 10} (None)
      
  %tr.control.add_button
    %td{:colspan => 10}= link_to '(Add Contract)', new_project_contract_path(@project), :remote => true |
      
  %tr.totals
    %td
      %strong Total
    %td.currency
      %strong= number_to_currency( @contracts.inject(0) {|memo,obj| add_or_nil memo, obj.raw_cost})
    %td.currency
      %strong= number_to_currency( @contracts.inject(0) {|memo,obj| add_or_nil memo, obj.raw_invoiced})
    %td.number
      %strong= @contracts.inject(0) {|memo,obj| add_or_nil memo, obj.raw_invoiced} == 0 ? nil : number_to_percentage( multiply_or_nil(100, (@contracts.inject(0) {|memo,obj| add_or_nil memo, obj.raw_invoiced}) / (@contracts.inject(0) {|memo,obj| add_or_nil memo, obj.raw_cost})), :precision => 1)
    %td{:colspan => 4}
