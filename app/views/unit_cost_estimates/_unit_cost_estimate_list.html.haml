%table
  %tr
    %th Name
    -if parent.class.name == 'Component'
      %th Task
    %th{:colspan => 3} Quantity
    %th.currency Unit cost
    %th.currency Cost
    %th.control
    %th.control
    %th.control

  - unit_cost_estimates.limit(limit).each do |unit_cost_estimate|
    %tr
      %td= unit_cost_estimate.name
      -if parent.class.name == 'Component'
        %td= unit_cost_estimate.task.blank? ? nil : unit_cost_estimate.task.name
      %td.number= unit_cost_estimate.quantity.value.to_i
      %td.unit= unit_cost_estimate.quantity.unit
      %td= unit_cost_estimate.quantity.name
      %td.currency= number_to_currency(unit_cost_estimate.unit_cost)
      %td.currency= number_to_currency(unit_cost_estimate.cost, :unit => "$")
      - case parent.class.name
      - when 'Component'
        %td.control
        %td.control= link_to 'Edit', edit_component_unit_cost_estimate_path(parent, unit_cost_estimate)
        %td.control= link_to 'Destroy', [parent, unit_cost_estimate], :confirm => 'Are you sure?', :method => :delete
      - when 'Task'
        %td.control{:colspan => 3}= link_to 'Show Component', unit_cost_estimate.component

  - if unit_cost_estimates.count > limit
    %tr
      %td{:colspan => 10}= link_to "(#{unit_cost_estimates.count - limit} more not shown - See All)", '/'

  - if unit_cost_estimates.empty?
    %tr
      %td{:colspan => 10} (None)
      
  %tr.totals
    %td.right{:colspan => parent.class.name == 'Component' ? 5 : 4}
      %strong Subtotal
    %td.currency
      %strong= number_to_currency( unit_cost_estimates.inject(0) {|memo,obj| add_or_nil memo, obj.cost })
    %td{:colspan => 4}
    
